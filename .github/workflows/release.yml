name: .NET Core build & publish to nuget

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      base-path: ./src/
      solution-name: BFC.sln
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Install dependencies
      run: dotnet restore ${{env.base-path}}${{env.solution-name}}
    - name: Build
      run: dotnet build ${{env.base-path}}${{env.solution-name}} --configuration Release --no-restore
    - name: Test
      run: dotnet test ${{env.base-path}}${{env.solution-name}} --no-restore --verbosity normal
  sonarQubeTrigger:
    needs: build
    name: SonarQube Trigger
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@master
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONAR_TOKEN }}
  buildnumber:
    needs: sonarQubeTrigger
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v2 
      with:
        token: ${{secrets.github_token}}      
  publish:
    name: build, pack & publish
    needs: buildnumber
    runs-on: ubuntu-latest
    env:
      base-path: ./src/BFC.RedisConnection/
    steps:
      - uses: actions/checkout@v2

      # - name: Setup dotnet
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 3.1.200

      # Publish
      - name: publish on version change
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: ${{env.base-path}}BFC.RedisConnection.csproj
          
          # NuGet package id, used for version detection & defaults to project name
          PACKAGE_NAME: BFC.RedisConnection
          
          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          
          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          VERSION_STATIC: 1.0.${{needs.buildnumber.outputs.build_number}}
          
          # Flag to toggle git tagging, enabled by default
          # TAG_COMMIT: true

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          # NUGET_SOURCE: https://api.nuget.org

          # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
          # INCLUDE_SYMBOLS: false
      
